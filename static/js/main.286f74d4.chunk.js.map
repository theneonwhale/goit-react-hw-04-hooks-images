{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ErrorNotification/ErrorNotification.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","images/error.png","components/ErrorNotification/ErrorNotification.js","services/pixabay-api.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","onSubmit","useState","query","setQuery","SearchForm","e","preventDefault","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","placeholder","ImageGalleryItem","src","largeImageURL","alt","onOpenModal","data-source","width","onClick","ImageGalleryItemImage","ImageGallery","images","map","id","webformatURL","tags","Button","onLoadMore","Loader","color","height","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","ModalImage","ErrorNotification","message","ErrorMessage","errorImg","API_KEY","BASE_URL","page","a","fetch","response","json","api","fetchImages","App","setImages","setPage","setLargeImageURL","setAlt","isLoading","setIsLoading","showModal","setShowModal","totalImages","setTotalImages","error","setError","imagesAPI","then","hits","total","toast","length","dark","info","catch","finally","scrollTo","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","toggleModal","source","dataset","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.286f74d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2LqQd\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1ZdTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorNotification\":\"ErrorNotification_ErrorNotification__26I1P\",\"ErrorMessage\":\"ErrorNotification_ErrorMessage__1Hc4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3MASg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2f_ou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3tnU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3C-BH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__17Luh\",\"SearchForm\":\"Searchbar_SearchForm__3Svks\",\"SearchFormButton\":\"Searchbar_SearchFormButton__39--5\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3VGOT\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1LYn7\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button className={s.SearchFormButton} type=\"submit\">\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={query}\n          onChange={handleQueryChange}\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  src,\n  largeImageURL,\n  alt,\n  onOpenModal,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={src}\n        data-source={largeImageURL}\n        alt={alt}\n        width=\"200\"\n        onClick={onOpenModal}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImageURL={largeImageURL}\n          onOpenModal={onOpenModal}\n          alt={tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" onClick={onLoadMore} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n","import LoaderSpinner from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={s.Loader}>\n      <LoaderSpinner type=\"TailSpin\" color=\"#00BFFF\" height={90} width={90} />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ largeImageURL, alt, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img className={s.ModalImage} src={largeImageURL} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/error.824d72e0.png\";","import PropTypes from 'prop-types';\nimport s from './ErrorNotification.module.css';\nimport errorImg from '../../images/error.png';\n\nexport default function ErrorNotification({ message }) {\n  return (\n    <div className={s.ErrorNotification}>\n      <p className={s.ErrorMessage}> {message} </p>\n      <img src={errorImg} alt=\"error\" width=\"500\" />\n    </div>\n  );\n}\n\nErrorNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\nconst API_KEY = '18468929-778868d20e0ea2a779d7d4913';\nconst BASE_URL = 'https://pixabay.com/api';\n\nasync function fetchImages(query, page) {\n  const response = await fetch(\n    `${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return await response.json();\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport Container from './components/Container/Container';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport ErrorNotification from './components/ErrorNotification/ErrorNotification';\nimport imagesAPI from './services/pixabay-api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [alt, setAlt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [totalImages, setTotalImages] = useState(0);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) return;\n    const getImages = () => {\n      setIsLoading(true);\n\n      return imagesAPI\n        .fetchImages(query, page)\n        .then(({ hits, total }) => {\n          if (query === ' ') {\n            toast.info('🔥 Enter valid query.');\n            return;\n          }\n\n          if (total === 0) {\n            toast.dark('😞 Nothing was found. Enter another query.');\n            return;\n          }\n\n          if (page === 1) {\n            toast(`✨ ${total} images was found.`);\n          }\n\n          setImages(images => [...images, ...hits]);\n          setTotalImages(total - images.length);\n        })\n        .catch(error => {\n          setError(`Something is wrong. ${error}`);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n    getImages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, query]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setImages([]);\n    setPage(1);\n    setTotalImages(0);\n    setError(null);\n  };\n\n  const handleChangePage = () => {\n    setPage(page => page + 1);\n  };\n\n  const onLoadMore = () => {\n    handleChangePage();\n    scrollTo();\n  };\n\n  const scrollTo = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 150,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onOpenModal = e => {\n    const { source } = e.target.dataset;\n    const { alt } = e.target;\n\n    setLargeImageURL(source);\n    setAlt(alt);\n\n    toggleModal();\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        query={query}\n        page={page}\n        images={images}\n        onOpenModal={onOpenModal}\n      />\n      {isLoading && <Loader />}\n      {totalImages > 11 && <Button onLoadMore={onLoadMore} />}\n      {showModal && (\n        <Modal largeImageURL={largeImageURL} alt={alt} onClose={toggleModal} />\n      )}\n      {error && <ErrorNotification message={error} />}\n      <ToastContainer />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1Npel\",\"Modal\":\"Modal_Modal__2hSgS\"};"],"sourceRoot":""}